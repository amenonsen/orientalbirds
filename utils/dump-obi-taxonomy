#!/usr/bin/env perl

use DBI;
use strict;
use warnings;

my $m = DBI->connect("dbi:mysql:database=obi", "", "")
    or die $DBI::errstr;

# The obc_birdgroup and obc_birdfamily tables define orders, families,
# subfamilies, and tribes. These data go into our taxa table. Finally,
# obc_birdinfo defines species, which go into our species table.

my @taxa = (
    [qw/1 Class \\N Aves Birds/]
);

my $orders = $m->selectall_arrayref(<<"SQL") or die $m->errstr;
    select bird_group_id, bird_group_name, bird_group_cname
        from obc_birdgroup
        order by bird_group_sortid
SQL

my $i = 2;
my %orders;
foreach my $o (@$orders) {
    $orders{$o->[0]} = $i;
    push @taxa, [
        $i, 'Order', 1, ucfirst lc $o->[1], $o->[2]
    ];
    $i++;
}

my $families = $m->selectall_arrayref(<<"SQL") or die $m->errstr;
    select bird_family_id, bird_family_name, bird_family_desc,
            bird_group_id, bird_sub_level, bird_sub_parent
        from obc_birdfamily
        order by bird_family_sortid
SQL

my %families;
foreach my $f (@$families) {
    $families{$f->[0]} = $i;

    my $level = $f->[4] - 1;
    my $rank = ('Family', 'Subfamily', 'Tribe')[$level];

    my $parent;
    if ($level == 0) {
        $parent = $orders{$f->[3]};
    }
    else {
        $parent = $families{$f->[5]};
    }

    my $desc = $f->[2] || "\\N";
    push @taxa, [
        $i, $rank, $parent, $f->[1], $desc
    ];

    $i++;
}

my $species = $m->selectall_arrayref(<<"SQL") or die $m->errstr;
    select bird_id, bird_common_name, bird_scientific_name,
            alt_common_name, alt_scientific_name,
            bird_family_id, bird_group_id,
            taxonomic_notes
        from obc_birdinfo
        order by bird_id
SQL

my @alt;
my $j = 1;
my @species;
foreach my $s (@$species) {
    my $parent = $families{$s->[5]};
    my ($genus, $species) = split / /, $s->[2], 2;

    $s->[1] =~ s/\x92/''/g;
    $s->[1] =~ s/\s*$//gsm;

    my $notes;
    if ($notes = $s->[7]) {
        $notes =~ s/\x92/''/g;
        $notes =~ s/[\cM\cJ]/\\n/gsm;
        $notes =~ s/\s*$//gsm;
    }
    else {
        $notes = "\\N";
    }

    push @species, [
        $parent, $genus, $species, $s->[1], $notes
    ];

    if (my $salt = $s->[4]) {
        $salt =~ s/^\s*//sm;
        $salt =~ s/\s*$//sm;
        $salt =~ s/\x92/''/g;
        $salt =~ s/[\cJ\cM]+/,/g;
        foreach my $sa (split /\s*,\s*/, $salt) {
            push @alt, [$j, 1, $sa];
        }
    }

    if (my $calt = $s->[3]) {
        $calt =~ s/^\s*//sm;
        $calt =~ s/\s*$//sm;
        $calt =~ s/\x92/''/g;
        $calt =~ s/[\cJ\cM]+/,/g;
        foreach my $ca (split /\s*,\s*/, $calt) {
            push @alt, [$j, 2, $ca];
        }
    }

    $j++;
}

my $taxa_string = join "\n", map { join "\t", @$_ } @taxa;
my $species_string = join "\n", map { join "\t", @$_ } @species;
my $alt_string = join "\n", map { join "\t", @$_ } @alt;

print <<"SQL";
-- This file is generated by utils/dump-obi-taxonomy

copy taxa (taxon_id, rank, parent, taxon_name, taxon_description) from stdin;
$taxa_string
\\.

alter sequence taxa_taxon_id_seq start with $i;

copy species (parent, genus, species, common_name, taxonomic_notes) from stdin;
$species_string
\\.

copy alternative_names (species_id, language_id, alt_name) from stdin;
$alt_string
\\.
SQL
